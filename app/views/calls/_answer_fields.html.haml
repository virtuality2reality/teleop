%li.answer{:id => "answer_#{f.object.question.id}", :style => @call.dependency_met_for?(f.object) ? nil : "display: none"}
  = f.hidden_field :question_id, :value => f.object.question.id
  = f.hidden_field :id, :value => f.object.id if f.object.persisted?
  %h3= f.object.question.title + (f.object.question.required? ? "*" : "")
  %div
    / - if f.object.persisted?
    /   %div
    /     = link_to_remove_fields image_tag('icons/actions/delete.png'), f, :selector => ".answer"
    - case f.object.question.typ
    - when "open"
      = f.input :body, :label => false
    - when "choices"
      .input.radio
        - f.object.question.choices.each do |c|
          %span
            %label
              = f.radio_button :choice_id, c.id, :class => "radio", :"data-dependent-questions" => c.dependent_question_ids.to_json
              = c.title
        %span.error= f.object.errors[:choice_id].first
      / = f.input :choice_id, :collection => f.object.question.choices, :as => :radio, :label => false, :input_html => { :"data-depending-questions" => "a".to_json }
